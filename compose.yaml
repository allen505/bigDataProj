services:
  zookeeper:
    image: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-net
  kafka:
    image: "bitnami/kafka"
    container_name: kafka
#    volumes:
#      - .:/home/workArea
    ports:
      - "9093:9093"
    environment:
#      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
#      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
#      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT

      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "vidRecommender:1:1"
#      This makes a topic `vidRecommender` with replication factor 1 and partition count 1.
    depends_on: [zookeeper]
    networks:
      - kafka-net
  mongodb:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - kafka-net
  spark:
    image: allennyu/sparky
    container_name: spark
    ports:
      - "3888:8888"
    networks:
      - kafka-net

#  kcat:
#    image: edenhill/kcat:1.7.1
#    container_name: kcat
#    networks:
#      - kafka-net


networks:
  kafka-net:
    driver: bridge